// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityManagement.Infrastrure;

namespace UniversityManagement.Infrastrure.Migrations
{
    [DbContext(typeof(UniManagementContext))]
    partial class UniManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("UniversityManagement.Domain.ReportCardAgg.ReportCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<string>("FinalScore")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<long>("SectionID")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SectionID");

                    b.HasIndex("StudentID");

                    b.ToTable("ReportCards");
                });

            modelBuilder.Entity("UniversityManagement.Domain.SectionAgg.Section", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameDegree")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("UniversityManagement.Domain.StudentAgg.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("UniversityManagement.Domain.ReportCardAgg.ReportCard", b =>
                {
                    b.HasOne("UniversityManagement.Domain.SectionAgg.Section", "Section")
                        .WithMany("ReportCards")
                        .HasForeignKey("SectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityManagement.Domain.StudentAgg.Student", "Student")
                        .WithMany("ReportCards")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniversityManagement.Domain.SectionAgg.Section", b =>
                {
                    b.Navigation("ReportCards");
                });

            modelBuilder.Entity("UniversityManagement.Domain.StudentAgg.Student", b =>
                {
                    b.Navigation("ReportCards");
                });
#pragma warning restore 612, 618
        }
    }
}
